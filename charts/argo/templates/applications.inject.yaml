{{- define "argo.application.inject" }}
{{- $root := .root }}
{{- $application := .application }}
{{- if and $application (ne (printf "%t" (index ($application | default dict) "enabled")) "false") }}
{{- if $application.inject }}
{{- if $application.inject.secrets }}
{{- range $name, $secret := $application.inject.secrets }}
---
apiVersion: v1
kind: Secret
type: {{ $secret.type | default "Opaque" | quote }}
metadata:
  name: {{ $name | quote }}
  namespace: {{ $application.namespace | quote }}
data:
  {{- toYaml $secret.data | nindent 2 }}
{{- end }}
{{- end }}
{{- if $application.inject.sealedSecrets }}
{{- range $name, $secret := $application.inject.sealedSecrets }}
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: {{ $name | quote }}
  namespace: {{ $application.namespace | quote }}
  annotations:
    sealedsecrets.bitnami.com/cluster-wide: "true"
spec:
  template:
    type: {{ $secret.type | default "Opaque" | quote }}
  encryptedData:
    {{- toYaml $secret.encryptedData | nindent 4 }}
{{- end }}
{{- end }}
{{- if $application.inject.files }}
{{- range $name, $path := $application.inject.files }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $name | quote }}
  namespace: {{ $application.namespace | quote }}
data:
  {{- ($root.Files.Glob (printf "%s/*" $path)).AsConfig | nindent 2 }}
{{- end }}
{{- end }}
{{- if $application.inject.services }}
{{- range $name, $service := $application.inject.services }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $name | quote }}
  namespace: {{ $application.namespace | quote }}
  labels:
    {{- toYaml $service.labels | nindent 4 }}
spec:
  {{- toYaml $service.spec | nindent 2 }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
